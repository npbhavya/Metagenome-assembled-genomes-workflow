"""
Author: Bhavya papudeshi
Aim:A snakemake workflow that refines the MAGs as phage genomes 
	Method - reads the metabat2 bins and run viral_verify to prefict the "Virus" bins 
		selects the "Virus" sequences to a new file
		calculate the viral completensss of each bin

Run: snakemake  -s snakemake-phage-bins --cores all
"""

import os
from os.path import join
import glob

#getting the read names
# In the future fix this so compressed formats are allowed as well and fasta formats
BINS, =glob_wildcards("binning/metabat_bins/{bin}.fa")
if len(BINS) == 0:
	sys.stderr.write(f"We did not find any MAGs in {BINS}. Confirm if the MAGs were assembled?\n")
	sys.exit(0)

print(f"Bins are {BINS}")

#lists all the outputs generated by the workflow
rule all:
	input:
		expand("binning/{bin}_viral_verify", bin=BINS),
		expand("binning/{bin}-viralseq.txt", bin=BINS),
		expand("binning/{bin}-viralseq.fasta", bin=BINS),
		expand("binning/{bin}-viralComplete/completeness.tsv", bin=BINS),
		expand("binning/{bin}-viralComplete/completeness2.tsv", bin=BINS),
		"binning/phage_completeness.tsv"

rule viral_verify:
	input:
		input="binning/metabat_bins/{bin}.fa"
	output:
		directory("binning/{bin}_viral_verify")
	shell:
		"viral_verify -i {input.input} -o {output} -H /home1/bhavya/Pfam-A.hmm -t 10"


rule get_viral_seq:
	input:
		"binning/{bin}_viral_verify/{bin}-results.csv"
	output:
		"binning/{bin}-viralseq.txt"
	run:
		shell("grep -w 'Virus,' {input} | cut -d ',' -f 1 >{output}")

rule samtools_faidx:
	input:
		contigs="binning/{bin}-viralseq.txt",
		metabat_bins="binning/metabat_bins/{bin}.fa"
	output:
		"binning/{bin}-viralseq.fasta"
	run:
		shell("for f in `cat binning/metabat_bins.1-viralseq.txt`; do  samtools faidx {input.metabat_bins} $f ; done >> {output}")

rule checkv:
	input:
		"binning/{bin}-viralseq.fasta"
	params:
		"binning/{bin}-viralComplete"
	output:
		"binning/{bin}-viralComplete/completeness.tsv"
	run:
		shell("export CHECKVDB=~/checkv-db-v1.0"),
		shell("checkv end_to_end {input} {params} -t 10"),

rule checkv_output:
	input:
		"binning/{bin}-viralComplete/completeness.tsv"
	output:
		"binning/{bin}-viralComplete/completeness2.tsv"
	run:
		shell("sed 's|.*|{input},&|g' {input} > {output}")

rule final_results:
	input:
		expand("binning/{bin}-viralComplete/completeness2.tsv", bin=BINS)
	output:
		"binning/phage_completeness.tsv"
	shell:
		"cat {input}> {output}"
